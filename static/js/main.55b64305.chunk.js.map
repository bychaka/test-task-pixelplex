{"version":3,"sources":["reducers/taskListReducer.js","reducers/taskTimerReducer.js","reducers/index.js","store/configureStore.js","components/AppHeader.js","components/taskOne/ListItem.js","components/taskOne/List.js","components/taskOne/TaskOne.js","actions/tasksActions.js","components/taskTwo/TaskTwo.js","App.js","serviceWorker.js","index.js"],"names":["initialState","listItems","counter","interval","parseInt","localStorage","getItem","rootReducer","combineReducers","list","state","arguments","length","undefined","action","type","Object","assign","concat","toConsumableArray","payload","filter","item","id","timer","store","createStore","AppHeader","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","src","width","className","alt","Nav_default","Link","target","Component","ListItem","_this","this","ListGroup_default","Item","props","data","value","Button_default","onClick","onDeleteHandler","List","map","listItem","taskOne_ListItem","key","TaskOne","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addTextHandler","bind","assertThisInitialized","deleteTextHandler","refs","textInput","onAddItem","Date","onDeleteItem","Container_default","Row_default","Col_default","Form_default","Control","placeholder","ref","taskOne_List","connect","dispatch","Handle","Slider","handle","dragging","index","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","TaskTwo","handleChange","timerStart","_this2","clearInterval","setTimeout","setTimerStep","timerParams","setItem","rc_slider_es","min","max","defaultValue","marks","0","5000","step","onChange","App","Fragment","components_AppHeader","taskOne_TaskOne","taskTwo_TaskTwo","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55b64305.chunk.js","sourcesContent":["export const initialState = {\r\n  listItems: []\r\n};\r\n\r\nexport const taskListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ON_ADD_ITEM\": {\r\n      return Object.assign({}, state, {\r\n        listItems: [...state.listItems, action.payload]\r\n      });\r\n    }\r\n    case \"ON_DELETE_ITEM\":\r\n      return Object.assign({}, state, {\r\n        listItems: state.listItems.filter(item => item.id !== action.payload.id)\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const initialState = {\r\n  counter: 0,\r\n  interval: parseInt(localStorage.getItem(\"interval\"), 10) || 0\r\n};\r\n\r\nexport const taskTimerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TIMER_STEP\":\r\n      return Object.assign({}, state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { taskListReducer } from \"./taskListReducer\";\r\nimport { taskTimerReducer } from \"./taskTimerReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  list: taskListReducer,\r\n  timer: taskTimerReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/lib/Navbar\";\r\nimport Nav from \"react-bootstrap/lib/Nav\";\r\n\r\nclass AppHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/test-task-pixelplex\">\r\n          <img\r\n            src=\"https://image.ibb.co/k7cmVT/logo_w.png\"\r\n            width=\"200\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"PixelPlex logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/test-task-pixelplex\">Home link</Nav.Link>\r\n          <Nav.Link href=\"https://pixelplex.io\" target=\"_blank\">\r\n            Pixelplex link\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/lib/Button\";\r\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\r\n\r\nimport \"./taskOne.css\";\r\n\r\nclass ListItem extends Component {\r\n  render() {\r\n    return (\r\n      <ListGroup.Item className=\"list-item\">\r\n        <p className=\"list-item-text\">{this.props.data.value}</p>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={() => {\r\n            this.props.onDeleteHandler(this.props.data.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <ListGroup>\r\n        {this.props.data.map(listItem => {\r\n          return (\r\n            <ListItem\r\n              data={listItem}\r\n              key={listItem.id}\r\n              onDeleteHandler={this.props.onDeleteHandler}\r\n            />\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/lib/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { onAddItem, onDeleteItem } from \"../../actions/tasksActions\";\r\nimport List from \"./List\";\r\n\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport Form from \"react-bootstrap/lib/Form\";\r\nimport Button from \"react-bootstrap/lib/Button\";\r\n\r\nimport \"./taskOne.css\";\r\n\r\nclass TaskOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTextHandler = this.addTextHandler.bind(this);\r\n    this.deleteTextHandler = this.deleteTextHandler.bind(this);\r\n  }\r\n\r\n  addTextHandler() {\r\n    if (this.refs.textInput.value) {\r\n      this.props.onAddItem({\r\n        id: +new Date(),\r\n        value: this.refs.textInput.value\r\n      });\r\n      this.refs.textInput.value = \"\";\r\n    }\r\n  }\r\n\r\n  deleteTextHandler(id) {\r\n    this.props.onDeleteItem({ id });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"task\">\r\n        <Row>\r\n          <Col>\r\n            <h3>Task #1</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"form-wrapper\">\r\n              <Form className=\"form\">\r\n                <Form.Control\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter text\"\r\n                  ref=\"textInput\"\r\n                />\r\n                <Button\r\n                  className=\"form-button\"\r\n                  variant=\"outline-secondary\"\r\n                  onClick={this.addTextHandler}\r\n                >\r\n                  Add text\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <h4>List:</h4>\r\n            <List\r\n              data={this.props.list}\r\n              onDeleteHandler={this.deleteTextHandler}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    list: store.list.listItems\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddItem: item => dispatch(onAddItem(item)),\r\n  onDeleteItem: item => dispatch(onDeleteItem(item))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskOne);\r\n","export const onAddItem = item => {\r\n  return {\r\n    type: \"ON_ADD_ITEM\",\r\n    payload: item\r\n  };\r\n};\r\n\r\n//onAddItem\r\n\r\nexport const onDeleteItem = item => {\r\n  return {\r\n    type: \"ON_DELETE_ITEM\",\r\n    payload: item\r\n  };\r\n};\r\n\r\nexport const setTimerStep = step => {\r\n  return {\r\n    type: \"SET_TIMER_STEP\",\r\n    payload: step\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/lib/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { setTimerStep } from \"../../actions/tasksActions\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport Tooltip from \"rc-tooltip\";\r\nimport Slider from \"rc-slider\";\r\n\r\nimport \"./taskTwo.css\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nconst Handle = Slider.Handle;\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nclass TaskTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.timerStart = this.timerStart.bind(this);\r\n  }\r\n\r\n  timerStart(interval) {\r\n    clearInterval(this.timer);\r\n    this.timer = setTimeout(\r\n      () =>\r\n        this.props.setTimerStep({\r\n          interval,\r\n          counter: this.props.timerParams.counter + interval\r\n        }),\r\n      interval\r\n    );\r\n  }\r\n\r\n  handleChange(interval) {\r\n    localStorage.setItem(\"interval\", interval);\r\n    this.props.setTimerStep({\r\n      interval,\r\n      counter: this.props.timerParams.counter\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.timerStart(this.props.timerParams.interval);\r\n\r\n    return (\r\n      <Container className=\"task\">\r\n        <Row>\r\n          <Col>\r\n            <h3>Task #2</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"task-2-wrappper\">\r\n          <Col>\r\n            <div className=\"slider\">\r\n              <Slider\r\n                min={0}\r\n                max={5000}\r\n                defaultValue={this.props.timerParams.interval}\r\n                marks={{ 0: 0, 5000: 5000 }}\r\n                step={100}\r\n                handle={handle}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <h4>Counter:</h4>\r\n            <p>{this.props.timerParams.counter}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    timerParams: store.timer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setTimerStep: step => dispatch(setTimerStep(step))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskTwo);\r\n","import React, { Component } from \"react\";\nimport AppHeader from \"./components/AppHeader\";\nimport TaskOne from \"./components/taskOne/TaskOne\";\nimport TaskTwo from \"./components/taskTwo/TaskTwo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <AppHeader />\n        <TaskOne />\n        <TaskTwo />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/configureStore\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}